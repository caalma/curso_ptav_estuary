##JSoLang onomatopeya
{{
    // variables y funciones de entorno
    var dat = {'inst':[], 'ritm':[], 'fxizq':[], 'fxder':[]};
    var ritmos = {
	'lento': 1,
	'rapido': 1,
	'normal': 1
    };

    var fx_izquierda = {
	'/2': 'slow 3 $',
	'*2': 'fast 3 $',
    };

    var fx_derecha = {
	'shh!': 'silence',
    };

    var ritmo = {'aum': 0, 'dis': 0};
    var rit_a = function (){ ritmo['aum'] += 1; }
    var rit_d = function (){ ritmo['dis'] += 1; }

    var paneo = {'izq': 0, 'der': 0};
    var pan_i = function (){ paneo['izq'] += 0.2; }
    var pan_d = function (){ paneo['der'] += 0.2; }

    var volumen = {'aum': 0, 'dis': 0};
    var vol_a = function (){ volumen['aum'] += 0.2; }
    var vol_d = function (){ volumen['dis'] += 0.2; }

    var agr = function(v, g){
	dat[g].push(v)
    }

    var res = function(){
	var r_inst = [],
            r_fxizq = [],
            r_fxder = [];
	var r_ritm = '';
	var p, i = '';
	for(i in dat['inst']){
	    p = dat['inst'][i];
            p = p === '=' ? '~' : p;
	    r_inst.push(p);
	}

	var r_ritm = 1 + ritmo['aum'] - ritmo['dis'];

	if(dat['fxizq'].length === 0){
    	    r_fxizq = [];
	}else{
 	    for(i in dat['fxizq']){
      		p = dat['fxizq'][i];
		if( p.startsWith('/')){
        	    p = p.replace('/', 'fast ')
		}else if ( p.startsWith('*')){
		    p = p.replace('*', 'slow ')
		}
       		r_fxizq.push(p);
	    }
	}

	if(dat['fxder'].length === 0){
    	    r_fxder = [];
	}else{
 	    for(i in dat['fxder']){
      		p = dat['fxder'][i];
       		r_fxder.push(fx_derecha[p]);
	    }
	}
	r_fxder.push('pan '+ (paneo['der'] -  paneo['izq']));
	r_fxder.push('gain '+ (1 + volumen['aum'] - volumen['dis']));

    var u_i = r_fxizq.length === 0 ? '' : ' $ ';
    var u_d = r_fxder.length === 0 ? '' : ' # ';


	return '##miniTidal\n'
            + r_fxizq.join(' $ ')
    	    + u_i
            + 's "['
            + r_inst.join(' ')
            + ']*' + r_ritm +'"'
            + u_d
            + r_fxder.join(' # ')
        ;
    }
}}

// reglas de lenguaje

composicion = (instrumento / ritmo / fxizq / fxder / paneo / volumen
	       / sep / ignorar)*
               { return res() }

instrumento = s:( s_silencio
                / 'aahh' / 'arg' / 'auu' / 'baaa' / 'bbbddd' / 'beep' / 'biiubiuu' / 'biukbuik'
                / 'blublu' / 'braam' / 'bruubrr' / 'chuinn' / 'chukun' / 'clik' / 'cocoococoo'
                / 'crack' / 'crash' / 'crish' / 'cuak' / 'dindundin' / 'fiui' / 'fuifuifuii'
                / 'fuuhh' / 'gluglu' / 'gruar' / 'grugrr' / 'guauguau' / 'guiin' / 'hiiee'
                / 'iaaaa' / 'inkoon' / 'iuiuiuiu' / 'iuueu' / 'ja' / 'je' / 'jiik' / 'jojujujuju'
                / 'kash' / 'oh' / 'oink' / 'pashh' / 'piopi' / 'pop' / 'prrrprrr' / 'punch'
                / 'punn' / 'shaa' / 'shii' / 'shsh' / 'snrrrss' / 'srisisi' / 'tak' / 'tang'
                / 'tictac' / 'tilintilin' / 'tinb' / 'tink' / 'tinkunbin' / 'tinsh' / 'tirariru'
                / 'tiruriruin' / 'tling' / 'tomtom' / 'tonb' / 'tonk' / 'toomm' / 'trikint'
                / 'tritiing' / 'triuuii' / 'trraass' / 'trritrri' / 'trtrtrtr' / 'tuk' / 'tulinnn'
                / 'turip' / 'tuum' / 'uiiuuu' / 'uops' / 'uow' / 'yuayua' / 'zick' / 'zizizizi'
		) { agr(s, 'inst') }

s_silencio = '='

ritmo = (rit_aum / rit_dis)
rit_aum = s:'+' { return rit_a() }
rit_dis = s:'-' { return rit_d() }

fxizq = s:( m_dur )
{ agr(s, 'fxizq') }

m_dur = s:(s_dur entero) { return s.join('') }
s_dur = ('/' / '*')


fxder = s:('shh!' )
{ agr(s, 'fxder')}



volumen = (vol_aum / vol_dis)
vol_aum = s:')' { return vol_a() }
vol_dis = s:'(' { return vol_d() }

paneo = (pan_izq / pan_der)
pan_izq = s:'<' { return pan_i() }
pan_der = s:'>' { return pan_d() }

sep = ' ' / ',' / '.'  { return '' }

comentado = ('_'[^\n.]*'\n'*) { return '' }
ignorar = '##testeito' / '\n' / comentado { return '' }
entero = n:[0-9]+ { return n.join('') }
