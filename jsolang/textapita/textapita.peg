##JSoLang textapita
{
    let cfg = {
    	'ruta_video': '"https://caalma.github.io/curso_ptav_estuary/jsolang/textapita/videos/'
    }

    let dat = {
    	'textos': [],
    	'modificadores': []
    }

    let agregar = (v, g) => { dat[g].push(v); }

    let gen_video = (v) => {
    	v = v.toLowerCase();
    	v = v === 'ñ' ? 'nn' : v;
    	return ['video ', cfg['ruta_video'] ,v ,'.mp4"'].join('')
    }

    let gen_texto_random = () => {
    	let ss = '#$%&/()=!*+?¡¿',
            l = ss[Math.round(Math.random() * (ss.length-1))];
        return ['text "', l ,'"'].join('')
    }

    let gen_tamannio = (v) => {
    	return ['setSize ', v].join('')
    }

    let gen_posicion = (px, py, dx, dy) => {
     	let col = (2/dx),
            x = (-1 + (px * col + col )).toFixed(2),
            y = py;
	return ['setCoord (', x, ') (', y, ')'].join('')
    }

    let aplanar = (l, e) => {
	return !e ? l : ['##cinecer0\n', l.join(';\n')].join('\n')
    }

    let resultado = () => {
    	let l = '',
            elem = [],
            l_textos = [],
            linea_texto = dat['textos'][0],
            i = 0;

     	for(i in linea_texto){
            elem = [];
            l = linea_texto[i];
	    elem.push(gen_posicion(i, 0, linea_texto.length + 2));

            if(l === ' '){
		elem.push(gen_tamannio(2));
                elem.push(gen_texto_random());
            }else{
		if(l.toUpperCase() === l){
            	    elem.push(gen_tamannio(0.15));
		}else{
		    elem.push(gen_tamannio(0.1));
		}
	        elem.push(gen_video(l));
            }
            l_textos.push(elem.join(' $ '));
        }
        return aplanar(l_textos, 1)
    }
}

composicion = (modificadores / texto / ignorar)*
              { return resultado() }

modificadores = (':'modificador)

modificador = m:('ondula-y' / 'ondula-x' / 'giratorias'
              / 'izquierda' / 'centro' / 'derecha')
              { agregar(m, 'modificadores') }

texto = t:('[' signos ']')
        { return t }

signos = s:('ñ' / 'Ñ' / [A-Za-z ])*
         { agregar(s, 'textos') }

ignorar = s:(. / ' ' / '\n' )
          { return s }
